{{!-- Shows 1 Blog matching the Id --}}
<section class="card">
  <header>title: {{blog.title}}</header>
  <div class="card-contents">
    <p>Contents: {{blog.body}}</p>
    <p>Post Creator's Username: {{blog.name}}</p>
    <p>Post Creator's Username: {{user.name}}</p>
    <p>Post Creator's Username: {{blogs}}</p>
    <p>User Id: {{blog.user_id}}</p>
    <p>Blog Id: {{blog.id}}</p>
    <p>Date Created: {{format_date blog.createdAt}}</p>
  </div>
</section>
<div>
  <button id="updateBlog" class="btn btn-warning">Update </button>
  <button id="deleteBlog" class="btn btn-danger">Delete </button>
</div>

{{#if comments}}
{{#each comments}}
{{> comment-template}}
{{/each }}
{{/if}}

{{! Need code that once 'comment btn clicked, shows input box' }}

{{! Comment Input Box }}
<div id="commentDiv" class="form-floating">
  <textarea class="form-control" placeholder="Leave a comment here" id="userComment1" style="height: 100px"></textarea>
  <label for="userComment1">Comments</label>
  <div>
    <button id="submitComment" class="btn btn-primary">Submit Comment</button>
  </div>
</div>

{{!-- script for Update and Delete Buttons --}}
<script>
  const editBlogFormHandler = async (event) => {
    event.preventDefault();

    const blogId = 7; // WHere do I get the Id From?

    const title = document.getElementById("blogTitle").value.trim();
    const body = document.getElementById("blogBody").value.trim();

    if (title && body) {
      const response = await fetch(`/api/users/blogs/${blogId}`, {
        method: "PUT",
        body: JSON.stringify({ title: title, body: body }),
        headers: { "Content-Type": "application/json" },
      })

      if (response.ok) {
        document.location.replace("/dashboard");
      }
      else {
        alert(response.statusText);
      }
    }
  };

  const deleteBlogFormHandler = async (event) => {
    event.preventDefault();

    const blogId = 7;

    const response = await fetch(`/api/users/blogs/${blogId}`, {
      method: "DELETE",
      headers: { "Content-Type": "application/json" },
    });

    if (response.ok) {
      document.location.replace("/dashboard");
    }
    else {
      alert(response.statusText);
    }

  };

  const submitCommentFormHandler = async (event) => {
    //console.log("UsEr Properties: ", req.session.user.id)
    event.preventDefault();
    const comment = document.getElementById("userComment1").value.trim();

    if (comment) {
      const response = await fetch(`/api/users/comments`, {
        method: "POST",
        body: JSON.stringify({ comment: comment }),
        headers: { "Content-Type": "application/json" },
      })

      if (response.ok) {
        document.location.replace("/blog/4"); // need to make the user id responsive!
      }
      else {
        alert(response.statusText);
      }
    }
  }

  document
    .getElementById("updateBlog")
    .addEventListener("click", editBlogFormHandler);

  document
    .getElementById("deleteBlog")
    .addEventListener("click", deleteBlogFormHandler);

  document
    .getElementById("submitComment")
    .addEventListener("click", submitCommentFormHandler);

</script>