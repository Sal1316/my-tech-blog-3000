{{!-- Shows 1 Blog matching the Id --}}
blog:
<section class="card">
  <header>Title: {{blog.title}}</header>
  <div class="card-contents">
    <p>Contents: {{blog.body}}</p>
    <p>Post Creator's Username: {{blog.user.name}}</p> {{!-- need to ref user name like this since we included User in
    the Blog request. --}}
    <p>Date Created: {{format_date blog.createdAt}}</p>
  </div>
</section>

{{!-- <div>
  <button id="updateBlog" class="btn btn-warning" data-id={{blog.id}}>Update </button>
  <button id="deleteBlog" class="btn btn-danger" data-id={{blog.id}}>Delete </button>
</div> --}}

{{#if comments}}
{{#each comments}}
{{> comment-template}}
{{/each }}
{{/if}}

<div>Comments</div>
<div id="commentDiv" class="form-floating">
  <textarea class="form-control" id="userComment1" data-id={{blog.id}} style="height: 100px"></textarea>
  <label for="userComment1">Comments</label>
  <div>
    <button id="submitComment2" class="btn btn-primary">Submit Comment</button>
  </div>
</div>


<script>
  const url = window.location.href;
  const splitUrl = url.split('/'); // creates an array [http:, localhost:3001, blog, 6]
  const blogId = splitUrl[splitUrl.length - 1];

  const editBlogFormHandler = async (event) => {
    event.preventDefault();

    const title = document.getElementById("blogTitle").value.trim();
    const body = document.getElementById("blogBody").value.trim();

    if (event.target.hasAttribute('data-id')) {
      const id = event.target.getAttribute('data-id');

      if (title && body) {
        const response = await fetch(`/api/users/blogs/${id}`, {
          method: "PUT",
          body: JSON.stringify({ title: title, body: body }),
          headers: { "Content-Type": "application/json" },
        });

        if (response.ok) {
          document.location.replace('/');
        } else {
          alert('Failed to UPDATE Blog');
        }
      }
    };
  };

  //done
  const deleteBlogFormHandler = async (event) => {
    event.preventDefault();

    //const url = window.location.href;
    //const splitUrl = url.split('/'); // creates an array [http:, localhost:3001, blog, 6]
    //const blogId = splitUrl[splitUrl.length - 1]; // to get last value, you need to put inside array, otherwise, you get the last array index which is 4.

    if (event.target.hasAttribute('data-id')) {
      const id = event.target.getAttribute('data-id');

      const response = await fetch(`/api/users/blogs/${id}`, {
        method: 'DELETE',
      });

      if (response.ok) {
        document.location.replace('/');
      } else {
        alert('Failed to DELETE Blog');
      }
    }
  };
  //done
  const submitCommentFormHandler = async (event) => {
    event.preventDefault();
    const comment = document.getElementById("userComment1").value.trim();

    if (comment) {
      const response = await fetch(`/api/users/comments`, {
        method: "POST",
        body: JSON.stringify({ comment: comment, user_id: blogId }),
        headers: { "Content-Type": "application/json" },
      })

      if (response.ok) {
        document.location.replace(`/blog/${blogId}`); // need to make the user id responsive!
      }
      else {
        alert(response.statusText);
      }
    }
  }
  document
    .getElementById("submitComment2")
    .addEventListener("click", submitCommentFormHandler);

  document
    .getElementById("updateBlog")
    .addEventListener("click", editBlogFormHandler);

  document
    .getElementById("deleteBlog")
    .addEventListener("click", deleteBlogFormHandler);



</script>